package com.spring.jwt.db.maria.model.hr;
// Generated Mar 5, 2019 8:51:06 AM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.annotation.Nullable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.spring.jwt.db.maria.model.authentication.User;

/**
 * Department generated by hbm2java
 */
@Entity
@Table(name = "department", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Department implements java.io.Serializable {

	private Long id;
	private Company company;
	private Department department;
	private User userByManagerId;
	private String name;
	private String nameEng;
	private String costCenter;
	private Date startDate;
	private Date endDate;
	private Date createDate;
	private Date updateDate;
	private Long createUser;
	private Long updateUser;	
	private Set<Department> departments = new HashSet<Department>(0);
	private Set<UserDetails> userDetailses = new HashSet<UserDetails>(0);

	private Department upperDepart;	
	
	public Department() {
	}

	public Department(Company company, String name) {
		this.company = company;
		this.name = name;
	}

	public Department(Company company, Department department, User userByManagerId, Long createUser,
			Long updateUser, String name, String nameEng, String costCenter, Date startDate, Date endDate,
			Date createDate, Date updateDate, Set<Department> departments, Set<UserDetails> userDetailses) {
		this.company = company;
		this.department = department;
		this.userByManagerId = userByManagerId;
		this.name = name;
		this.nameEng = nameEng;
		this.costCenter = costCenter;
		this.startDate = startDate;
		this.endDate = endDate;
		this.createDate = createDate;
		this.updateDate = updateDate;
		this.createUser = createUser;
		this.updateUser = updateUser;
		this.departments = departments;
		this.userDetailses = userDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "company_id", nullable = false)
	@JsonIgnore
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "upper_dept_id")
	@JsonIgnore
	@Nullable
	public Department getDepartment() {
		return this.department;
	}

	public void setDepartment(Department department) {
		this.department = department;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "manager_id")
	public User getUserByManagerId() {
		return this.userByManagerId;
	}

	public void setUserByManagerId(User userByManagerId) {
		this.userByManagerId = userByManagerId;
	}

	@Column(name = "name", unique = true, nullable = false, length = 120)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "name_eng", length = 120)
	public String getNameEng() {
		return this.nameEng;
	}

	public void setNameEng(String nameEng) {
		this.nameEng = nameEng;
	}

	@Column(name = "cost_center", length = 60)
	public String getCostCenter() {
		return this.costCenter;
	}

	public void setCostCenter(String costCenter) {
		this.costCenter = costCenter;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_date", length = 26)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_date", length = 26)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 26)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 26)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "create_user")
	public Long getCreateUser() {
		return this.createUser;
	}

	public void setCreateUser(Long createUser) {
		this.createUser = createUser;
	}

	@Column(name = "update_user")
	public Long getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(Long updateUser) {
		this.updateUser = updateUser;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "department")
	public Set<Department> getDepartments() {
		return this.departments;
	}

	public void setDepartments(Set<Department> departments) {
		this.departments = departments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "department")
	public Set<UserDetails> getUserDetailses() {
		return this.userDetailses;
	}

	public void setUserDetailses(Set<UserDetails> userDetailses) {
		this.userDetailses = userDetailses;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "upper_dept_id",insertable=false, updatable=false )
	@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
	@JsonIdentityReference(alwaysAsId = true)
	@JsonProperty(value="upperDepartId")
	public Department getUpperDepart() {
		return upperDepart;
	}

	public void setUpperDepart(Department upperDepart) {
		this.upperDepart = upperDepart;
	}
}
